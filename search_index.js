var documenterSearchIndex = {"docs":
[{"location":"modules/FeatureExtraction/index.html","page":"Module","title":"Module","text":"warning: Warning\nTODO: this documentation is incomplete and currently under development. To see more detail of the module functions, go to the module sections.","category":"page"},{"location":"modules/FeatureExtraction/index.html#FeatureExtraction","page":"Module","title":"FeatureExtraction","text":"","category":"section"},{"location":"contributing.html#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing.html","page":"Contributing","title":"Contributing","text":"using Markdown, ModelSelection\r\nMarkdown.parse_file(joinpath(pkgdir(ModelSelection), \"CONTRIBUTING.md\"))","category":"page"},{"location":"start.html#Getting-started","page":"Getting Started","title":"Getting started","text":"","category":"section"},{"location":"start.html","page":"Getting Started","title":"Getting Started","text":"This basic example demonstrates how to use the package in its simplest way. However, for a more in-depth understanding of the various options and features, please navigate to the Usage section where all available functionalities and usage scenarios are thoroughly explained.","category":"page"},{"location":"start.html#Installation","page":"Getting Started","title":"Installation","text":"","category":"section"},{"location":"start.html","page":"Getting Started","title":"Getting Started","text":"ModelSelection can be installed using the Julia package manager. From the Julia REPL, type ] to enter the Pkg REPL mode and run","category":"page"},{"location":"start.html","page":"Getting Started","title":"Getting Started","text":"pkg> add ModelSelection","category":"page"},{"location":"start.html#Usage","page":"Getting Started","title":"Usage","text":"","category":"section"},{"location":"start.html","page":"Getting Started","title":"Getting Started","text":"To start perform model selection and save and load the results, follow these steps: To start to perform model selection and manage results, follow these steps:","category":"page"},{"location":"start.html","page":"Getting Started","title":"Getting Started","text":"model = ModelSelection.gsr(:ols, ...)\r\nModelSelection.save(\"result.jld\", model)  # Saves model\r\nModelSelection.save_csv(\"result.csv\", model)  # Saves the results to csv\r\nmodel = ModelSelection.load(\"result.jld\")  # Loads the model","category":"page"},{"location":"modules/Preprocessing/core.html#Core","page":"Core","title":"Core","text":"","category":"section"},{"location":"modules/Preprocessing/core.html","page":"Core","title":"Core","text":"This section of the documentation is dedicated to explaining the purpose and usage core functions used throughout the Preprocessing module.","category":"page"},{"location":"modules/Preprocessing/core.html#Contents","page":"Core","title":"Contents","text":"","category":"section"},{"location":"modules/Preprocessing/core.html","page":"Core","title":"Core","text":"Pages = [\"core.md\"]","category":"page"},{"location":"modules/Preprocessing/core.html#Index","page":"Core","title":"Index","text":"","category":"section"},{"location":"modules/Preprocessing/core.html","page":"Core","title":"Core","text":"Pages = [\"core.md\"]","category":"page"},{"location":"modules/Preprocessing/core.html#Functions","page":"Core","title":"Functions","text":"","category":"section"},{"location":"modules/Preprocessing/core.html","page":"Core","title":"Core","text":"Preprocessing.input(\r\n    equation::String,\r\n    data::Union{\r\n        Array{Float64},\r\n        Array{Float32},\r\n        Array{Union{Float64,Missing}},\r\n        Array{Union{Float32,Missing}},\r\n        Tuple,\r\n        DataFrame,\r\n    };\r\n    datanames::Union{Array{Symbol},Nothing} = nothing,\r\n    method::Symbol = METHOD_DEFAULT,\r\n    intercept::Bool = INTERCEPT_DEFAULT,\r\n    fixedvariables::Union{Symbol,Array{Symbol},Nothing} = FIXED_VARIABLES_DEFAULT,\r\n    panel::Union{Symbol,Nothing} = PANEL_DEFAULT,\r\n    time::Union{Symbol,Nothing} = TIME_DEFAULT,\r\n    seasonaladjustment::Union{Dict{Symbol,Int64},Nothing} = SEASONALADJUSTMENT_DEFAULT,\r\n    removeoutliers::Bool = REMOVEOUTLIERS_DEFAULT,\r\n    removemissings::Bool = REMOVEMISSINGS_DEFAULT,\r\n    notify = NOTIFY_DEFAULT,\r\n)\r\nPreprocessing.input(\r\n    equation::Vector{String},\r\n    data::Union{\r\n        Array{Float64},\r\n        Array{Float32},\r\n        Array{Union{Float64,Missing}},\r\n        Array{Union{Float32,Missing}},\r\n        Tuple,\r\n        DataFrame,\r\n    };\r\n    datanames::Union{Array{Symbol},Nothing} = nothing,\r\n    method::Symbol = METHOD_DEFAULT,\r\n    intercept::Bool = INTERCEPT_DEFAULT,\r\n    fixedvariables::Union{Symbol,Array{Symbol},Nothing} = FIXED_VARIABLES_DEFAULT,\r\n    panel::Union{Symbol,Nothing} = PANEL_DEFAULT,\r\n    time::Union{Symbol,Nothing} = TIME_DEFAULT,\r\n    seasonaladjustment::Union{Dict{Symbol,Int64},Nothing} = SEASONALADJUSTMENT_DEFAULT,\r\n    removeoutliers::Bool = REMOVEOUTLIERS_DEFAULT,\r\n    removemissings::Bool = REMOVEMISSINGS_DEFAULT,\r\n    notify = NOTIFY_DEFAULT,\r\n)\r\nPreprocessing.input(\r\n    equation::Vector{Symbol},\r\n    data::Union{\r\n        Array{Float64},\r\n        Array{Float32},\r\n        Array{Union{Float64,Missing}},\r\n        Array{Union{Float32,Missing}},\r\n        Tuple,\r\n        DataFrame,\r\n    };\r\n    datanames::Union{Array{Symbol},Nothing} = nothing,\r\n    method::Symbol = METHOD_DEFAULT,\r\n    intercept::Bool = INTERCEPT_DEFAULT,\r\n    fixedvariables::Union{Symbol,Array{Symbol},Nothing} = FIXED_VARIABLES_DEFAULT,\r\n    panel::Union{Symbol,Nothing} = PANEL_DEFAULT,\r\n    time::Union{Symbol,Nothing} = TIME_DEFAULT,\r\n    seasonaladjustment::Union{Dict{Symbol,Int64},Nothing} = SEASONALADJUSTMENT_DEFAULT,\r\n    removeoutliers::Bool = REMOVEOUTLIERS_DEFAULT,\r\n    removemissings::Bool = REMOVEMISSINGS_DEFAULT,\r\n    notify = NOTIFY_DEFAULT,\r\n)\r\nPreprocessing.execute(\r\n    equation::Vector{Symbol},\r\n    data::Union{\r\n        Array{Float64},\r\n        Array{Float32},\r\n        Array{Union{Float64,Missing}},\r\n        Array{Union{Float32,Missing}},\r\n    },\r\n    datanames::Vector{Symbol},\r\n    method::Symbol,\r\n    intercept::Bool,\r\n    datatype::DataType;\r\n    fixedvariables::Union{Symbol,Array{Symbol},Nothing} = FIXED_VARIABLES_DEFAULT,\r\n    panel::Union{Symbol,Nothing} = PANEL_DEFAULT,\r\n    time::Union{Symbol,Nothing} = TIME_DEFAULT,\r\n    seasonaladjustment::Union{Dict{Symbol,Int64},Nothing} = SEASONALADJUSTMENT_DEFAULT,\r\n    removeoutliers::Bool = REMOVEOUTLIERS_DEFAULT,\r\n    removemissings::Bool = REMOVEMISSINGS_DEFAULT,\r\n    notify = NOTIFY_DEFAULT,\r\n)","category":"page"},{"location":"modules/Preprocessing/core.html#ModelSelection.Preprocessing.input-Tuple{Vector{String}, Union{Tuple, DataFrame, Array{Float32, N} where N, Array{Float64, N} where N, Array{Union{Missing, Float64}, N} where N, Array{Union{Missing, Float32}, N} where N}}","page":"Core","title":"ModelSelection.Preprocessing.input","text":"input(\n    equation::Vector{String},\n    data::Union{\n        Array{Float64},\n        Array{Float32},\n        Array{Union{Float64,Missing}},\n        Array{Union{Float32,Missing}},\n        Tuple,\n        DataFrame,\n    };\n    datanames::Union{Array{Symbol},Nothing} = nothing,\n    intercept::Bool = INTERCEPT_DEFAULT,\n    fixedvariables::Union{Symbol,Array{Symbol},Nothing} = FIXED_VARIABLES_DEFAULT,\n    panel::Union{Symbol,Nothing} = PANEL_DEFAULT,\n    time::Union{Symbol,Nothing} = TIME_DEFAULT,\n    seasonaladjustment::Union{Dict{Symbol,Int64},Nothing} = SEASONALADJUSTMENT_DEFAULT,\n    removeoutliers::Bool = REMOVEOUTLIERS_DEFAULT,\n    removemissings::Bool = REMOVEMISSINGS_DEFAULT,\n    notify = NOTIFY_DEFAULT,\n)\n\nConverts the equation as vector of strings to a vector of symbols, parsing the wildcards and call other functions to perform data preprocessing.\n\nParameters\n\nequation::Array{String}: The equation in string format.\ndata::Union{Array{Float32}, Array{Float64}, Array{Union{Float32,Missing}}, Array{Union{Float64,Missing}}, DataFrame, Tuple}: The input data.\ndatanames::Union{Array{Symbol},Nothing}: (optional) Names of the variables in the data.\nintercept::Bool: (optional) Whether to include an intercept in the model. Default is INTERCEPT_DEFAULT.\nfixedvariables::Union{Symbol,Array{Symbol},Nothing}: (optional) Fixed variables to include in the model. Default is FIXED_VARIABLES_DEFAULT.\npanel::Union{Symbol,Nothing}: (optional) Panel variable for panel data. Default is PANEL_DEFAULT.\ntime::Union{Symbol,Nothing}: (optional) Time variable for time series data. Default is TIME_DEFAULT.\nseasonaladjustment::Union{Dict{Symbol,Int64},Nothing}: (optional) Seasonal adjustment parameters. Default is SEASONALADJUSTMENT_DEFAULT.\nremoveoutliers::Bool: (optional) Whether to remove outliers from the data. Default is REMOVEOUTLIERS_DEFAULT.\nremovemissings::Bool: (optional) Whether to remove missing values from the data. Default is REMOVEMISSINGS_DEFAULT.\nnotify: (optional) Notification method. Default is NOTIFY_DEFAULT.\n\nEquation format\n\nThe equation parameter can be in the following formats:\n\n# Vector of strings\nequation = [\"y\", \"x1\", \"x2\" \"x3\"]\n\n# Using wildcards\nequation = [\"y\", \"*\"]\nequation = [\"y\", \"x*\"]\nequation = [\"y\", \"x1\", \"z*\"]\n\nReturns\n\nmodelselection_data: The resulting model selection data.\n\nErrors\n\nArgumentError(DATANAMES_REQUIRED): When datanames is not provided.\nArgumentError(VARIABLES_NOT_DEFINED): When equation contains undefined variables.\n\nExample\n\nwarning: Warning\nTODO: seasonaladjustment parameter missing.\n\nequation = [\"y\", \"x1\", \"x2\"]\ndata = [1.0 1.0 23 1.0 2.0 3.0; 1.0 2.0 33 4.0 5.0 6.0; 2.0 1.0 44 7.0 8.0 9.0]\ndatanames = [:panel, :time, :y, :x1, :x2, :x3]\njob_notify(message::String, data::Union{Any,Nothing} = nothing) = println(message, data)\n\nmodel = input(\n    equation,\n    data,\n    datanames = datanames,\n    method = :fast,\n    intercept = true,\n    fixedvariables = :x3,\n    panel = :panel,\n    time = :time,\n    removeoutliers = true,\n    removemissings = true,\n    notify = job_notify,\n)\n# model: ModelSelectionData(\n    equation=[:y, :x1, :x2],\n    depvar=:y,\n    expvars=[:x1, :x2, :_cons],\n    fixedvariables=[:x3],\n    panel=:panel,\n    time=:time,\n    intercept=true,\n    datatype=Float32,\n    method=:fast,\n    nobs=3,\n    # ...\n)\n\n\n\n\n\n","category":"method"},{"location":"modules/Preprocessing/core.html#ModelSelection.Preprocessing.input-Tuple{Vector{Symbol}, Union{Tuple, DataFrame, Array{Float32, N} where N, Array{Float64, N} where N, Array{Union{Missing, Float64}, N} where N, Array{Union{Missing, Float32}, N} where N}}","page":"Core","title":"ModelSelection.Preprocessing.input","text":"input(\n    equation::Vector{Symbol},\n    data::Union{\n        Array{Float64},\n        Array{Float32},\n        Array{Union{Float64,Missing}},\n        Array{Union{Float32,Missing}},\n        Tuple,\n        DataFrame,\n    };\n    datanames::Union{Array{Symbol},Nothing} = nothing,\n    method::Symbol = METHOD_DEFAULT,\n    intercept::Bool = INTERCEPT_DEFAULT,\n    fixedvariables::Union{Symbol,Array{Symbol},Nothing} = FIXED_VARIABLES_DEFAULT,\n    panel::Union{Symbol,Nothing} = PANEL_DEFAULT,\n    time::Union{Symbol,Nothing} = TIME_DEFAULT,\n    seasonaladjustment::Union{Dict{Symbol,Int64},Nothing} = SEASONALADJUSTMENT_DEFAULT,\n    removeoutliers::Bool = REMOVEOUTLIERS_DEFAULT,\n    removemissings::Bool = REMOVEMISSINGS_DEFAULT,\n    notify = NOTIFY_DEFAULT,\n)\n\nProcess different values that are required for data process and validates that the data and the parameters are valid. Converts the data to the selected type and call excecute function to perform data preprocessing.\n\nParameters\n\nequation::Array{String}: The equation in string format.\ndata::Union{Array{Float32}, Array{Float64}, Array{Union{Float32,Missing}}, Array{Union{Float64,Missing}}, DataFrame, Tuple}: The input data.\ndatanames::Union{Array{Symbol},Nothing}: (optional) Names of the variables in the data.\nmethod::Symbol: (optional) The method to use for format the data. Default is METHOD_DEFAULT.\nintercept::Bool: (optional) Whether to include an intercept in the model. Default is INTERCEPT_DEFAULT.\nfixedvariables::Union{Symbol,Array{Symbol},Nothing}: (optional) Fixed variables to include in the model. Default is FIXED_VARIABLES_DEFAULT.\npanel::Union{Symbol,Nothing}: (optional) Panel variable for panel data. Default is PANEL_DEFAULT.\ntime::Union{Symbol,Nothing}: (optional) Time variable for time series data. Default is TIME_DEFAULT.\nseasonaladjustment::Union{Dict{Symbol,Int64},Nothing}: (optional) Seasonal adjustment parameters. Default is SEASONALADJUSTMENT_DEFAULT.\nremoveoutliers::Bool: (optional) Whether to remove outliers from the data. Default is REMOVEOUTLIERS_DEFAULT.\nremovemissings::Bool: (optional) Whether to remove missing values from the data. Default is REMOVEMISSINGS_DEFAULT.\nnotify: (optional) Notification method. Default is NOTIFY_DEFAULT.\n\nReturns\n\nmodelselection_data: The resulting model selection data.\n\nErrors\n\nArgumentError(DATANAMES_REQUIRED): When datanames is not provided.\nArgumentError(INVALID_METHOD): When the specified method is invalid.\nArgumentError(SELECTED_VARIABLES_DOES_NOT_EXISTS): When one or more variables in equation are not present in datanames.\nArgumentError(SELECTED_FIXED_VARIABLES_DOES_NOT_EXISTS): When one or more fixed variables in fixedvariables are not present in datanames.\nArgumentError(SELECTED_FIXED_VARIABLES_IN_EQUATION): When one or more fixed variables in fixedvariables are also present in equation.\nArgumentError(TIME_VARIABLE_INEXISTENT): When the specified time variable does not exist in datanames.\nArgumentError(PANEL_VARIABLE_INEXISTENT): When the specified panel variable does not exist in datanames.\n\nExample\n\nwarning: Warning\nTODO: seasonaladjustment parameter missing.\n\nequation = [:y, :x1, :x2]\ndata = [1.0 1.0 23 1.0 2.0 3.0; 1.0 2.0 33 4.0 5.0 6.0; 2.0 1.0 44 7.0 8.0 9.0]\ndatanames = [:panel, :time, :y, :x1, :x2, :x3]\njob_notify(message::String, data::Union{Any,Nothing} = nothing) = println(message, data)\n\nmodel = input(\n    equation,\n    data,\n    datanames = datanames,\n    method = :fast,\n    intercept = true,\n    fixedvariables = :x3,\n    panel = :panel,\n    time = :time,\n    removeoutliers = true,\n    removemissings = true,\n    notify = job_notify,\n)\n# model: ModelSelectionData(\n    equation=[:y, :x1, :x2],\n    depvar=:y,\n    expvars=[:x1, :x2, :_cons],\n    fixedvariables=[:x3],\n    panel=:panel,\n    time=:time,\n    intercept=true,\n    datatype=Float32,\n    method=:fast,\n    nobs=3,\n    # ...\n)\n\n\n\n\n\n","category":"method"},{"location":"modules/FeatureExtraction/const.html#Constants","page":"Constants","title":"Constants","text":"","category":"section"},{"location":"modules/FeatureExtraction/const.html","page":"Constants","title":"Constants","text":"This section of the documentation is dedicated to explaining the purpose and usage of the constants used throughout the FeatureExtraction module.","category":"page"},{"location":"modules/FeatureExtraction/const.html#Contents","page":"Constants","title":"Contents","text":"","category":"section"},{"location":"modules/FeatureExtraction/const.html","page":"Constants","title":"Constants","text":"Pages = [\"const.md\"]","category":"page"},{"location":"modules/FeatureExtraction/const.html#Index","page":"Constants","title":"Index","text":"","category":"section"},{"location":"modules/FeatureExtraction/const.html","page":"Constants","title":"Constants","text":"Pages = [\"const.md\"]","category":"page"},{"location":"modules/FeatureExtraction/const.html#Constants-2","page":"Constants","title":"Constants","text":"","category":"section"},{"location":"modules/FeatureExtraction/const.html","page":"Constants","title":"Constants","text":"FeatureExtraction.FEATUREEXTRACTION_EXTRAKEY\r\nFeatureExtraction.REMOVEMISSINGS_DEFAULT\r\nFeatureExtraction.PROGRESS","category":"page"},{"location":"modules/FeatureExtraction/const.html#ModelSelection.FeatureExtraction.FEATUREEXTRACTION_EXTRAKEY","page":"Constants","title":"ModelSelection.FeatureExtraction.FEATUREEXTRACTION_EXTRAKEY","text":"FEATUREEXTRACTION_EXTRAKEY\n\nA constant symbol representing the key used for feature extraction.\n\n\n\n\n\n","category":"constant"},{"location":"modules/FeatureExtraction/const.html#ModelSelection.FeatureExtraction.REMOVEMISSINGS_DEFAULT","page":"Constants","title":"ModelSelection.FeatureExtraction.REMOVEMISSINGS_DEFAULT","text":"REMOVEMISSINGS_DEFAULT\n\nA constant Boolean value indicating the default setting for removing missing values.\n\n\n\n\n\n","category":"constant"},{"location":"modules/FeatureExtraction/const.html#ModelSelection.FeatureExtraction.PROGRESS","page":"Constants","title":"ModelSelection.FeatureExtraction.PROGRESS","text":"PROGRESS\n\nConstant representing the progress indicator.\n\n\n\n\n\n","category":"constant"},{"location":"modules/Preprocessing/index.html","page":"Module","title":"Module","text":"warning: Warning\nTODO: this documentation is incomplete and currently under development. To see more detail of the module functions, go to the module sections.","category":"page"},{"location":"modules/Preprocessing/index.html#Preprocessing","page":"Module","title":"Preprocessing","text":"","category":"section"},{"location":"modules/Preprocessing/index.html","page":"Module","title":"Module","text":"This module process the data based on the various inputs that the package has.","category":"page"},{"location":"modules/Preprocessing/index.html#Contents","page":"Module","title":"Contents","text":"","category":"section"},{"location":"modules/Preprocessing/index.html","page":"Module","title":"Module","text":"Pages = [\"index.md\"]","category":"page"},{"location":"modules/Preprocessing/index.html#Index","page":"Module","title":"Index","text":"","category":"section"},{"location":"modules/Preprocessing/index.html","page":"Module","title":"Module","text":"Pages = [\"index.md\"]","category":"page"},{"location":"modules/Preprocessing/index.html#Usage","page":"Module","title":"Usage","text":"","category":"section"},{"location":"modules/Preprocessing/index.html","page":"Module","title":"Module","text":"using CSV, DataFrames\r\nusing ModelSelection: Preprocessing\r\n\r\ndata = CSV.read(\"data.csv\", DataFrame)\r\n\r\nmodelselection_data = input(equation, data)","category":"page"},{"location":"modules/FeatureExtraction/strings.html#Strings","page":"Strings","title":"Strings","text":"","category":"section"},{"location":"modules/FeatureExtraction/strings.html","page":"Strings","title":"Strings","text":"This section of the documentation is dedicated to explaining the purpose and usage of the strings used throughout the FeatureExtraction module.","category":"page"},{"location":"modules/FeatureExtraction/strings.html#Contents","page":"Strings","title":"Contents","text":"","category":"section"},{"location":"modules/FeatureExtraction/strings.html","page":"Strings","title":"Strings","text":"Pages = [\"strings.md\"]","category":"page"},{"location":"modules/FeatureExtraction/strings.html#Index","page":"Strings","title":"Index","text":"","category":"section"},{"location":"modules/FeatureExtraction/strings.html","page":"Strings","title":"Strings","text":"Pages = [\"strings.md\"]","category":"page"},{"location":"modules/FeatureExtraction/strings.html#Constants","page":"Strings","title":"Constants","text":"","category":"section"},{"location":"modules/FeatureExtraction/strings.html","page":"Strings","title":"Strings","text":"FeatureExtraction.INTERACTION_DEPVAR_ERROR\r\nFeatureExtraction.INTERACTION_EQUATION_ERROR\r\nFeatureExtraction.LOG_FUNCTION_ERROR\r\nFeatureExtraction.NOTIFY_MESSAGE\r\nFeatureExtraction.SOME_VARIABLES_NOT_FOUND","category":"page"},{"location":"modules/FeatureExtraction/strings.html#ModelSelection.FeatureExtraction.INTERACTION_DEPVAR_ERROR","page":"Strings","title":"ModelSelection.FeatureExtraction.INTERACTION_DEPVAR_ERROR","text":"INTERACTION_DEPVAR_ERROR\n\nError message indicating that the dependent variable should not be selected for interactions.\n\n\n\n\n\n","category":"constant"},{"location":"modules/FeatureExtraction/strings.html#ModelSelection.FeatureExtraction.INTERACTION_EQUATION_ERROR","page":"Strings","title":"ModelSelection.FeatureExtraction.INTERACTION_EQUATION_ERROR","text":"INTERACTION_EQUATION_ERROR\n\nError message indicating that some interaction variable is not present in the original equation.\n\n\n\n\n\n","category":"constant"},{"location":"modules/FeatureExtraction/strings.html#ModelSelection.FeatureExtraction.LOG_FUNCTION_ERROR","page":"Strings","title":"ModelSelection.FeatureExtraction.LOG_FUNCTION_ERROR","text":"LOG_FUNCTION_ERROR\n\nError message indicating that the log transformation does not allow negative values.\n\n\n\n\n\n","category":"constant"},{"location":"modules/FeatureExtraction/strings.html#ModelSelection.FeatureExtraction.NOTIFY_MESSAGE","page":"Strings","title":"ModelSelection.FeatureExtraction.NOTIFY_MESSAGE","text":"NOTIFY_MESSAGE\n\nConstant representing the message for the notify message during feature extraction.\n\n\n\n\n\n","category":"constant"},{"location":"modules/FeatureExtraction/strings.html#ModelSelection.FeatureExtraction.SOME_VARIABLES_NOT_FOUND","page":"Strings","title":"ModelSelection.FeatureExtraction.SOME_VARIABLES_NOT_FOUND","text":"SOME_VARIABLES_NOT_FOUND\n\nError message indicating that some of the selected variables are not found.\n\n\n\n\n\n","category":"constant"},{"location":"news.html#Todo","page":"News","title":"Todo","text":"","category":"section"},{"location":"news.html","page":"News","title":"News","text":"using Markdown, ModelSelection\r\nMarkdown.parse_file(joinpath(pkgdir(ModelSelection), \"NEWS.md\"))","category":"page"},{"location":"modules/FeatureExtraction/utils.html#Utils","page":"Utils","title":"Utils","text":"","category":"section"},{"location":"modules/FeatureExtraction/utils.html","page":"Utils","title":"Utils","text":"This section of the documentation is dedicated to explaining the purpose and usage of the utils function used throughout the FeatureExtraction module.","category":"page"},{"location":"modules/FeatureExtraction/utils.html#Contents","page":"Utils","title":"Contents","text":"","category":"section"},{"location":"modules/FeatureExtraction/utils.html","page":"Utils","title":"Utils","text":"Pages = [\"utils.md\"]","category":"page"},{"location":"modules/FeatureExtraction/utils.html#Index","page":"Utils","title":"Index","text":"","category":"section"},{"location":"modules/FeatureExtraction/utils.html","page":"Utils","title":"Utils","text":"Pages = [\"utils.md\"]","category":"page"},{"location":"modules/FeatureExtraction/utils.html#Functions","page":"Utils","title":"Functions","text":"","category":"section"},{"location":"modules/FeatureExtraction/utils.html","page":"Utils","title":"Utils","text":"FeatureExtraction.parse_fe_variables(\r\n    fe_vars::Union{Symbol,Vector{Symbol},Dict{Symbol,Int64},Vector{Tuple{Symbol, Symbol}}},\r\n    expvars::Vector{Symbol};\r\n    depvar::Union{Symbol,Nothing} = nothing,\r\n)\r\nFeatureExtraction.data_add_fe_vars!(\r\n    data::ModelSelection.ModelSelectionData,\r\n    fe_vars::Union{Symbol,Vector{Symbol},Dict{Symbol,Int64}},\r\n    postfix::String,\r\n    func,\r\n)\r\nFeatureExtraction.data_add_fe_sqr!(\r\n    data::ModelSelection.ModelSelectionData,\r\n    fe_vars::Union{Symbol,Vector{Symbol}},\r\n)\r\nFeatureExtraction.data_add_fe_log!(\r\n    data::ModelSelection.ModelSelectionData,\r\n    fe_vars::Union{Symbol,Vector{Symbol}},\r\n)\r\nFeatureExtraction.data_add_fe_inv!(\r\n    data::ModelSelection.ModelSelectionData,\r\n    fe_vars::Union{Symbol,Vector{Symbol}},\r\n)\r\nFeatureExtraction.data_add_fe_lag!(\r\n    data::ModelSelection.ModelSelectionData,\r\n    fe_vars::Dict{Symbol,Int64},\r\n)\r\nFeatureExtraction.data_add_interaction!(\r\n    data::ModelSelection.ModelSelectionData,\r\n    interaction::Vector{Tuple{Symbol,Symbol}},\r\n)","category":"page"},{"location":"modules/FeatureExtraction/utils.html#ModelSelection.FeatureExtraction.parse_fe_variables-Tuple{Union{Dict{Symbol, Int64}, Vector{Symbol}, Vector{Tuple{Symbol, Symbol}}, Symbol}, Vector{Symbol}}","page":"Utils","title":"ModelSelection.FeatureExtraction.parse_fe_variables","text":"parse_fe_variables(\n    fe_vars::Union{Symbol,Vector{Symbol},Dict{Symbol,Int64},Vector{Tuple{Symbol, Symbol}}},\n    expvars::Vector{Symbol};\n    depvar::Union{Symbol,Nothing} = nothing,\n)\n\nThis function parses the fixed effect variables specified in fe_vars and returns them as a vector of symbols. It supports different input formats, including single symbols, vectors of symbols, dictionaries with symbols as keys and integers as values, or vectors of tuples with two symbols representing variable combinations. The function also checks the validity of the parsed variables based on the provided expvars (explanatory variables) and depvar (dependent variable). If the parsed variables are empty or not found in the expvars list, the function returns nothing.\n\nParameters\n\nfe_vars::Union{Symbol, Vector{Symbol}, Dict{Symbol, Int64}, Vector{Tuple{Symbol,Symbol}}}: Fixed effect variables specified as a symbol, vector of symbols, dictionary with symbols as keys and integers as values, or vector of tuples with two symbols.\nexpvars::Vector{Symbol}: Vector of explanatory variables.\ndepvar::Union{Symbol, Nothing} = nothing: Dependent variable symbol.\n\nReturns\n\nVector{Symbol}: If fe_vars is a Symbol or a Vector{Symbol}, a vector of symbols representing the parsed fixed effects variables.\nDict{Symbol,Int64}: If fe_vars is a Dict{Symbol,Int64}, a dict of symbols representing the parsed fixed effects variables with an int related with.\nVector{Tuple{Symbol,Symbol}}: If fe_vars is a Vector{Tuple{Symbol,Symbol}}, a vector of tuple of symbols representing the parsed fixed effects variables tuples.\nNothing: if fe_vars are not in expvars nor depvar.\n\nExample\n\nexpvars = [:x1, :x2, :x3]\nfe_vars = [:x1, :x3]\n\nvars = parse_fe_variables(fe_vars, expvars; depvar=:y)\n# vars: [:x1, :x3]\n\nexpvars = [:x1, :x2, :x3]\nfe_vars = Dict(:x1 => 1, :x3 => 2)\n\nvars = parse_fe_variables(fe_vars, expvars; depvar=:y)\n# vars: Dict(:x1 => 1, :x3 => 2)\n\nexpvars = [:x1, :x2, :x3]\nfe_vars = [(:x1, :x2), (:x1, :x3)]\n\nvars = parse_fe_variables(fe_vars, expvars; depvar=:y)\n# vars: [(:x1, :x2), (:x1, :x3)]\n\n\n\n\n\n","category":"method"},{"location":"modules/FeatureExtraction/utils.html#ModelSelection.FeatureExtraction.data_add_fe_vars!-Tuple{ModelSelectionData, Union{Dict{Symbol, Int64}, Symbol, Vector{Symbol}}, String, Any}","page":"Utils","title":"ModelSelection.FeatureExtraction.data_add_fe_vars!","text":"data_add_fe_vars!(\n    data::ModelSelection.ModelSelectionData,\n    fe_vars::Union{Symbol,Vector{Symbol},Dict{Symbol,Int64}},\n    postfix::String,\n    func,\n)\n\nThis function adds fixed effect variables to the data in a model selection object. The fixed effect variables can be specified as a symbol, a vector of symbols, or a dictionary with symbols as keys and integers as values. The postfix argument is a string that will be appended to the variable names, and func is a function that will be applied to the fixed effect variables. If a fixed effect variable already exists in the data.expvars, the function will update the corresponding column in data.expvars_data using the func. Otherwise, the function will create a new column in data.expvars_data and append the variable with the postfix to data.expvars.\n\nParameters\n\ndata::ModelSelection.ModelSelectionData: Model selection data object.\nfe_vars::Union{Symbol, Vector{Symbol}, Dict{Symbol, Int64}}: Fixed effect variables specified as a symbol, vector of symbols, or dictionary with symbols as keys and integers as values.\npostfix::String: Postfix string to append to the variable names.\nfunc: Function to apply to the fixed effect variables.\n\nExample\n\ndata = ModelSelectionData(...)\n\nfe_vars = [:x2, :x3]\npostfix = \"_fe\"\nfunc(data) = log.(data)\n\ndata_add_fe_vars!(data, fe_vars, postfix, func)\n\n\n\n\n\n","category":"method"},{"location":"modules/FeatureExtraction/utils.html#ModelSelection.FeatureExtraction.data_add_fe_sqr!-Tuple{ModelSelectionData, Union{Symbol, Vector{Symbol}}}","page":"Utils","title":"ModelSelection.FeatureExtraction.data_add_fe_sqr!","text":"data_add_fe_sqr!(\n    data::ModelSelection.ModelSelectionData,\n    fe_vars::Union{Symbol,Vector{Symbol}},\n)\n\nAdd squared fixed effect variables to the data in a model selection object. The fixed effect variables can be specified as a symbol or a vector of symbols. The function applies a square transformation to the fixed effect variables and appends them to data.expvars with the postfix \"_sqrt\".\n\nParameters\n\ndata::ModelSelection.ModelSelectionData: Model selection data object.\nfe_vars::Union{Symbol, Vector{Symbol}}: Fixed effect variables specified as a symbol or vector of symbols.\n\nExample\n\ndata = ModelSelectionData(...)\n\nfe_vars = [:x1, :x2]\ndata_add_fe_sqr!(data, fe_vars)\n\n\n\n\n\n","category":"method"},{"location":"modules/FeatureExtraction/utils.html#ModelSelection.FeatureExtraction.data_add_fe_log!-Tuple{ModelSelectionData, Union{Symbol, Vector{Symbol}}}","page":"Utils","title":"ModelSelection.FeatureExtraction.data_add_fe_log!","text":"data_add_fe_log!(\n    data::ModelSelection.ModelSelectionData,\n    fe_vars::Union{Symbol,Vector{Symbol}},\n)\n\nAdd logarithmic transformation of fixed effect variables to the data in a model selection object. The fixed effect variables can be specified as a symbol or a vector of symbols. The function applies a logarithmic transformation (log.) to the fixed effect variables and appends them to data.expvars with the postfix \"_log\".\n\nParameters\n\ndata::ModelSelection.ModelSelectionData: Model selection data object.\nfe_vars::Union{Symbol, Vector{Symbol}}: Fixed effect variables specified as a symbol or vector of symbols.\n\nErrors\n\nArgumentError(LOG_FUNCTION_ERROR): When negative values are provided.\n\nExample\n\ndata = ModelSelectionData(...)\n\nfe_vars = [:x1, :x2]\ndata_add_fe_log!(data, fe_vars)\n\n\n\n\n\n","category":"method"},{"location":"modules/FeatureExtraction/utils.html#ModelSelection.FeatureExtraction.data_add_fe_inv!-Tuple{ModelSelectionData, Union{Symbol, Vector{Symbol}}}","page":"Utils","title":"ModelSelection.FeatureExtraction.data_add_fe_inv!","text":"data_add_fe_inv!(\n    data::ModelSelection.ModelSelectionData,\n    fe_vars::Union{Symbol,Vector{Symbol}},\n)\n\nAdd inverse transformation of fixed effect variables to the data in a model selection object. The fixed effect variables can be specified as a symbol or a vector of symbols. The function applies an inverse transformation (1 ./ data) to the fixed effect variables and appends them to data.expvars with the postfix \"_inv\".\n\nParameters\n\ndata::ModelSelection.ModelSelectionData: Model selection data object.\nfe_vars::Union{Symbol, Vector{Symbol}}: Fixed effect variables specified as a symbol or vector of symbols.\n\nExample\n\ndata = ModelSelectionData(...)\n\nfe_vars = [:x1, :x2]\ndata_add_fe_inv!(data, fe_vars)\n\n\n\n\n\n","category":"method"},{"location":"modules/FeatureExtraction/utils.html#ModelSelection.FeatureExtraction.data_add_fe_lag!-Tuple{ModelSelectionData, Dict{Symbol, Int64}}","page":"Utils","title":"ModelSelection.FeatureExtraction.data_add_fe_lag!","text":"data_add_fe_lag!(\n    data::ModelSelection.ModelSelectionData,\n    fe_vars::Dict{Symbol,Int64},\n)\n\nAdd lagged variables of fixed effect variables to the data in a model selection object. The function iterates over the fixed effect variables in fe_vars and generates the lagged variables for each variable based on the specified number of lags. The lagged variables are appended to data.expvars with the postfix \"lag\" and added to `data.expvarsdataas new columns. The lagged variables are computed for each unique value indata.paneldataif panel data is available.  If a fixed effect variable is already present indata.expvars, the lagged values are overwritten indata.expvarsdata. If a fixed effect variable is not present indata.expvars, the lagged values are stored in a separate matrixvardataand later appended todata.expvarsdata`.\n\nParameters\n\ndata::ModelSelection.ModelSelectionData: Model selection data object.\nfe_vars::Dict{Symbol, Int64}: Fixed effect variables and the number of lags specified as a dictionary.\n\nExample\n\ndata = ModelSelectionData(...)\n\nfe_vars = Dict(:x1 => 1, :x2 => 2)\ndata_add_fe_lag!(data, fe_vars)\n\n\n\n\n\n","category":"method"},{"location":"modules/FeatureExtraction/utils.html#ModelSelection.FeatureExtraction.data_add_interaction!-Tuple{ModelSelectionData, Vector{Tuple{Symbol, Symbol}}}","page":"Utils","title":"ModelSelection.FeatureExtraction.data_add_interaction!","text":"data_add_interaction!(\n    data::ModelSelection.ModelSelectionData,\n    interaction::Vector{Tuple{Symbol,Symbol}},\n)\n\nAdd interaction variables to the data in a model selection object. The interaction variables are formed by multiplying the values of the specified variables in each tuple. The function applies a logarithmic transformation (log.) to the fixed effect variables and appends them to data.expvars with the postfix \"_log\".\n\nParameters\n\ndata::ModelSelection.ModelSelectionData: Model selection data object.\ninteraction::Vector{Tuple{Symbol, Symbol}}: Vector of tuples representing the variables for interaction.\n\nExample\n\ndata = ModelSelectionData(...)\n\ninteraction = [(:x1, :x2), (:x1, :x3)]\ndata_add_interaction!(data, interaction)\n\n\n\n\n\n","category":"method"},{"location":"modules/Preprocessing/strings.html#Strings","page":"Strings","title":"Strings","text":"","category":"section"},{"location":"modules/Preprocessing/strings.html","page":"Strings","title":"Strings","text":"This section of the documentation is dedicated to explaining the purpose and usage of the strings used throughout the Preprocessing module.","category":"page"},{"location":"modules/Preprocessing/strings.html#Contents","page":"Strings","title":"Contents","text":"","category":"section"},{"location":"modules/Preprocessing/strings.html","page":"Strings","title":"Strings","text":"Pages = [\"strings.md\"]","category":"page"},{"location":"modules/Preprocessing/strings.html#Index","page":"Strings","title":"Index","text":"","category":"section"},{"location":"modules/Preprocessing/strings.html","page":"Strings","title":"Strings","text":"Pages = [\"strings.md\"]","category":"page"},{"location":"modules/Preprocessing/strings.html#Constants","page":"Strings","title":"Constants","text":"","category":"section"},{"location":"modules/Preprocessing/strings.html","page":"Strings","title":"Strings","text":"Preprocessing.DATANAMES_REQUIRED\r\nPreprocessing.PANEL_ERROR\r\nPreprocessing.PANEL_VARIABLE_INEXISTENT\r\nPreprocessing.SELECTED_FIXED_VARIABLES_DOES_NOT_EXISTS\r\nPreprocessing.SELECTED_FIXED_VARIABLES_IN_EQUATION\r\nPreprocessing.SELECTED_VARIABLES_DOES_NOT_EXISTS\r\nPreprocessing.SOME_VARIABLES_NOT_FOUND\r\nPreprocessing.TIME_ERROR\r\nPreprocessing.TIME_VARIABLE_INEXISTENT\r\nPreprocessing.VARIABLES_NOT_DEFINED\r\nPreprocessing.NOTIFY_MESSAGE","category":"page"},{"location":"modules/Preprocessing/strings.html#ModelSelection.Preprocessing.DATANAMES_REQUIRED","page":"Strings","title":"ModelSelection.Preprocessing.DATANAMES_REQUIRED","text":"DATANAMES_REQUIRED\n\nConstant representing the error message when required variable names (datanames) are missing or not provided.\n\n\n\n\n\n","category":"constant"},{"location":"modules/Preprocessing/strings.html#ModelSelection.Preprocessing.PANEL_ERROR","page":"Strings","title":"ModelSelection.Preprocessing.PANEL_ERROR","text":"PANEL_ERROR\n\nConstant representing the error message when the panel variable has gaps.\n\n\n\n\n\n","category":"constant"},{"location":"modules/Preprocessing/strings.html#ModelSelection.Preprocessing.PANEL_VARIABLE_INEXISTENT","page":"Strings","title":"ModelSelection.Preprocessing.PANEL_VARIABLE_INEXISTENT","text":"PANEL_VARIABLE_INEXISTENT\n\nConstant representing the error message when the selected panel variable does not exist in the dataset.\n\n\n\n\n\n","category":"constant"},{"location":"modules/Preprocessing/strings.html#ModelSelection.Preprocessing.SELECTED_FIXED_VARIABLES_DOES_NOT_EXISTS","page":"Strings","title":"ModelSelection.Preprocessing.SELECTED_FIXED_VARIABLES_DOES_NOT_EXISTS","text":"SELECTED_FIXED_VARIABLES_DOES_NOT_EXISTS\n\nConstant representing the error message when the selected fixed variables do not exist in the dataset.\n\n\n\n\n\n","category":"constant"},{"location":"modules/Preprocessing/strings.html#ModelSelection.Preprocessing.SELECTED_FIXED_VARIABLES_IN_EQUATION","page":"Strings","title":"ModelSelection.Preprocessing.SELECTED_FIXED_VARIABLES_IN_EQUATION","text":"SELECTED_FIXED_VARIABLES_IN_EQUATION\n\nConstant representing the error message when the selected fixed variables are not allowed to be included in the equation.\n\n\n\n\n\n","category":"constant"},{"location":"modules/Preprocessing/strings.html#ModelSelection.Preprocessing.SELECTED_VARIABLES_DOES_NOT_EXISTS","page":"Strings","title":"ModelSelection.Preprocessing.SELECTED_VARIABLES_DOES_NOT_EXISTS","text":"SELECTED_VARIABLES_DOES_NOT_EXISTS\n\nConstant representing the error message when the selected variables do not exist in the dataset.\n\n\n\n\n\n","category":"constant"},{"location":"modules/Preprocessing/strings.html#ModelSelection.Preprocessing.SOME_VARIABLES_NOT_FOUND","page":"Strings","title":"ModelSelection.Preprocessing.SOME_VARIABLES_NOT_FOUND","text":"SOME_VARIABLES_NOT_FOUND\n\nConstant representing the error message when some variables were not found in the dataset.\n\n\n\n\n\n","category":"constant"},{"location":"modules/Preprocessing/strings.html#ModelSelection.Preprocessing.TIME_ERROR","page":"Strings","title":"ModelSelection.Preprocessing.TIME_ERROR","text":"TIME_ERROR\n\nConstant representing the error message when the time variable has gaps or repeated values.\n\n\n\n\n\n","category":"constant"},{"location":"modules/Preprocessing/strings.html#ModelSelection.Preprocessing.TIME_VARIABLE_INEXISTENT","page":"Strings","title":"ModelSelection.Preprocessing.TIME_VARIABLE_INEXISTENT","text":"TIME_VARIABLE_INEXISTENT\n\nConstant representing the error message when the selected time variable does not exist in the dataset.\n\n\n\n\n\n","category":"constant"},{"location":"modules/Preprocessing/strings.html#ModelSelection.Preprocessing.VARIABLES_NOT_DEFINED","page":"Strings","title":"ModelSelection.Preprocessing.VARIABLES_NOT_DEFINED","text":"VARIABLES_NOT_DEFINED\n\nConstant representing the error message when variables are not defined.\n\n\n\n\n\n","category":"constant"},{"location":"modules/Preprocessing/strings.html#ModelSelection.Preprocessing.NOTIFY_MESSAGE","page":"Strings","title":"ModelSelection.Preprocessing.NOTIFY_MESSAGE","text":"NOTIFY_MESSAGE\n\nConstant representing the message for notify message.\n\n\n\n\n\n","category":"constant"},{"location":"todo.html#TODO","page":"Todo","title":"TODO","text":"","category":"section"},{"location":"todo.html","page":"Todo","title":"Todo","text":"This section is an overview of pending tasks, improvements, and future plans for the ModelSelection package.","category":"page"},{"location":"todo.html","page":"Todo","title":"Todo","text":"using Markdown, ModelSelection\r\nMarkdown.parse_file(joinpath(pkgdir(ModelSelection), \"TODO.md\"))","category":"page"},{"location":"license.html#Licence","page":"License","title":"Licence","text":"","category":"section"},{"location":"license.html","page":"License","title":"License","text":"using Markdown, ModelSelection\r\nMarkdown.parse_file(joinpath(pkgdir(ModelSelection), \"LICENSE\"))","category":"page"},{"location":"usage.html","page":"Usage","title":"Usage","text":"Please note that this section is currently pending. We are actively working on providing comprehensive guidelines and instructions for utilizing the features of this package.","category":"page"},{"location":"modules/FeatureExtraction/core.html#Core","page":"Core","title":"Core","text":"","category":"section"},{"location":"modules/FeatureExtraction/core.html","page":"Core","title":"Core","text":"This section of the documentation is dedicated to explaining the purpose and usage core functions used throughout the FeatureExtraction module.","category":"page"},{"location":"modules/FeatureExtraction/core.html#Contents","page":"Core","title":"Contents","text":"","category":"section"},{"location":"modules/FeatureExtraction/core.html","page":"Core","title":"Core","text":"Pages = [\"core.md\"]","category":"page"},{"location":"modules/FeatureExtraction/core.html#Index","page":"Core","title":"Index","text":"","category":"section"},{"location":"modules/FeatureExtraction/core.html","page":"Core","title":"Core","text":"Pages = [\"core.md\"]","category":"page"},{"location":"modules/FeatureExtraction/core.html#Functions","page":"Core","title":"Functions","text":"","category":"section"},{"location":"modules/FeatureExtraction/core.html","page":"Core","title":"Core","text":"FeatureExtraction.featureextraction!(\r\n    data::ModelSelection.ModelSelectionData;\r\n    fe_sqr::Union{Symbol,Vector{Symbol},Nothing} = nothing,\r\n    fe_log::Union{Symbol,Vector{Symbol},Nothing} = nothing,\r\n    fe_inv::Union{Symbol,Vector{Symbol},Nothing} = nothing,\r\n    fe_lag::Union{Dict{Symbol,Int64},Nothing} = nothing,\r\n    interaction::Union{Vector{Tuple{Symbol,Symbol}},Nothing} = nothing,\r\n    removemissings::Bool = REMOVEMISSINGS_DEFAULT,\r\n    notify = nothing,\r\n)\r\nFeatureExtraction.execute!(\r\n    data::ModelSelection.ModelSelectionData;\r\n    fe_sqr::Union{Symbol,Vector{Symbol},Nothing} = nothing,\r\n    fe_log::Union{Symbol,Vector{Symbol},Nothing} = nothing,\r\n    fe_inv::Union{Symbol,Vector{Symbol},Nothing} = nothing,\r\n    fe_lag::Union{Dict{Symbol,Int64},Nothing} = nothing,\r\n    interaction::Union{Vector{Tuple{Symbol,Symbol}},Nothing} = nothing,\r\n    removemissings::Bool = REMOVEMISSINGS_DEFAULT,\r\n    notify = nothing,\r\n)","category":"page"},{"location":"modules/FeatureExtraction/core.html#ModelSelection.FeatureExtraction.featureextraction!-Tuple{ModelSelectionData}","page":"Core","title":"ModelSelection.FeatureExtraction.featureextraction!","text":"featureextraction!(\n    data::ModelSelection.ModelSelectionData;\n    fe_sqr::Union{Symbol,Vector{Symbol},Nothing} = nothing,\n    fe_log::Union{Symbol,Vector{Symbol},Nothing} = nothing,\n    fe_inv::Union{Symbol,Vector{Symbol},Nothing} = nothing,\n    fe_lag::Union{Dict{Symbol,Int64},Nothing} = nothing,\n    interaction::Union{Vector{Tuple{Symbol,Symbol}},Nothing} = nothing,\n    removemissings::Bool = REMOVEMISSINGS_DEFAULT,\n    notify = nothing,\n)\n\nPerform feature extraction on the data in a model selection object. It applies different feature extraction techniques to the specified variables and updates the data accordingly.\n\nThe available feature extraction options are:\n\nfe_sqr: Square the variables.\nfe_log: Apply the natural logarithm to the variables.\nfe_inv: Invert the variables (1/x).\nfe_lag: Lag the variables by a specified order.\ninteraction: Create interaction variables from pairs of variables.\nremovemissings: Indicator whether to remove missing values from the data.\n\nParameters\n\ndata::ModelSelection.ModelSelectionData: Model selection data object.\nfe_sqr::Union{Symbol, Vector{Symbol}, Nothing}: (optional) Single symbol or vector of symbols representing variables to be squared.\nfe_log::Union{Symbol, Vector{Symbol}, Nothing}: (optional) Single symbol or vector of symbols representing variables to be transformed with the natural logarithm.\nfe_inv::Union{Symbol, Vector{Symbol}, Nothing}: (optional) Single symbol or vector of symbols representing variables to be inverted (1/x).\nfe_lag::Union{Dict{Symbol, Int64}, Nothing}: (optional) Dictionary specifying the variables and their lag order.\ninteraction::Union{Vector{Tuple{Symbol, Symbol}}, Nothing}: (optional) Vector of tuples representing variables for interaction.\nremovemissings::Bool: (optional) Indicator whether to remove missing values from the data.\nnotify: (optional) Notification method. Default is NOTIFY_DEFAULT.\n\nReturns\n\ndata::ModelSelection.ModelSelectionData: Model selection data object with updated data.\n\nExample\n\ndata = ModelSelection.ModelSelectionData(...)\n\nfeatureextraction!(\n    data,\n    fe_sqr = :x1,\n    fe_log = [:x2, :x3],\n    fe_inv = :x4,\n    fe_lag = Dict(:x5 => 1),\n    interaction = [(x6, x7),\n    removemissings = true,\n]\n\n\n\n\n\n","category":"method"},{"location":"modules/FeatureExtraction/core.html#ModelSelection.FeatureExtraction.execute!-Tuple{ModelSelectionData}","page":"Core","title":"ModelSelection.FeatureExtraction.execute!","text":"execute!(\n    data::ModelSelection.ModelSelectionData;\n    fe_sqr::Union{Symbol,Vector{Symbol},Nothing} = nothing,\n    fe_log::Union{Symbol,Vector{Symbol},Nothing} = nothing,\n    fe_inv::Union{Symbol,Vector{Symbol},Nothing} = nothing,\n    fe_lag::Union{Dict{Symbol,Int64},Nothing} = nothing,\n    interaction::Union{Vector{Tuple{Symbol,Symbol}},Nothing} = nothing,\n    removemissings::Bool = REMOVEMISSINGS_DEFAULT,\n    notify = nothing,\n)\n\nExecute feature extraction operations on the data in a model selection object. It performs operations such as squaring variables, applying the natural logarithm, inverting variables, lagging variables, and creating interaction variables.\n\nThe available feature extraction options are:\n\nfe_sqr: Square the variables.\nfe_log: Apply the natural logarithm to the variables.\nfe_inv: Invert the variables (1/x).\nfe_lag: Lag the variables by a specified order.\ninteraction: Create interaction variables from pairs of variables.\nremovemissings: Indicator whether to remove missing values from the data.\n\nParameters\n\ndata::ModelSelection.ModelSelectionData: Model selection data object.\nfe_sqr::Union{Symbol, Vector{Symbol}, Nothing}: (optional) Single symbol or vector of symbols representing variables to be squared.\nfe_log::Union{Symbol, Vector{Symbol}, Nothing}: (optional) Single symbol or vector of symbols representing variables to be transformed with the natural logarithm.\nfe_inv::Union{Symbol, Vector{Symbol}, Nothing}: (optional) Single symbol or vector of symbols representing variables to be inverted (1/x).\nfe_lag::Union{Dict{Symbol, Int64}, Nothing}: (optional) Dictionary specifying the variables and their lag order.\ninteraction::Union{Vector{Tuple{Symbol, Symbol}}, Nothing}: (optional) Vector of tuples representing variables for interaction.\nremovemissings::Bool: (optional) Indicator whether to remove missing values from the data.\nnotify: (optional) Notification method. Default is NOTIFY_DEFAULT.\n\nReturns\n\ndata::ModelSelection.ModelSelectionData: Model selection data object with updated data.\n\nExample\n\ndata = ModelSelection.ModelSelectionData(...)\n\nexecute!(\n    data,\n    fe_sqr = :x1,\n    fe_log = [:x2, :x3],\n    fe_inv = :x4,\n    fe_lag = Dict(:x5 => 1),\n    interaction = [(x6, x7),\n    removemissings = true,\n]\n\n\n\n\n\n","category":"method"},{"location":"index.html#ModelSelection","page":"Home","title":"ModelSelection","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Model Selection for Julia.","category":"page"},{"location":"index.html#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"We would like to inform you that the features documentation for the latest version of our package is currently pending. As we are preparing to release a new version, our development team is working diligently to finalize the features and functionalities included in this update.","category":"page"},{"location":"index.html#ModelSelectionGUI-package","page":"Home","title":"ModelSelectionGUI package","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"ModelSelection.jl has a web server package designed to provide a user-friendly interface for utilizing the ModelSelection package. It consists of a backend and an optional frontend that offers a graphical user interface (GUI) for seamless interaction with the underlying ModelSelection functionality. package functions as an interface with ModelSelection.jl. For more details about the functionalities and features provided by ModelSelectionGUI.jl, please visit the package repository.","category":"page"},{"location":"index.html#Contributing","page":"Home","title":"Contributing","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Contributions are welcome! If you encounter any issues or have suggestions for improvements, please open an issue or submit a pull request on the repository. Make sure to follow the guidelines outlined in the Contributing section.","category":"page"},{"location":"index.html#TODO-List","page":"Home","title":"TODO List","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"For an overview of pending tasks, improvements, and future plans for the ModelSelectionGUI package, please refer to the TODO section.","category":"page"},{"location":"index.html#License","page":"Home","title":"License","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"This package is licensed under the MIT License.","category":"page"},{"location":"index.html#Credits","page":"Home","title":"Credits","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The ModelSelection module, was written primarily by Demian Panigo, Adán Mauri Ungaro, Nicolás Monzón and Valentín Mari. The ModelSelection.jl module was inpired by GSReg for Stata, written by Pablo Gluzmann and Demian Panigo.","category":"page"}]
}
